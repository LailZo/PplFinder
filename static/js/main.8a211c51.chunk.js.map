{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","context/FavoritesContext.js","hooks/useFavorites.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","pages/Profile/style.js","pages/Profile/Profile.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","isVisible2","FavoritesContext","createContext","FavoritesProvider","useState","JSON","parse","localStorage","getItem","favorites","setFavorites","Provider","handleFavorite","e","user","stopPropagation","newFavs","includes","filter","fav","setItem","stringify","useFavorites","useContext","users","isLoading","lastUserRef","console","log","length","hoveredUserId","setHoveredUserId","history","useHistory","states","setStates","setChecked","filteredUsers","setFilteredUsers","countries","state","indexOf","rem","newArr","splice","push","useEffect","u","location","country","handleMouseLeave","map","index","onMouseEnter","handleMouseEnter","onMouseLeave","ref","onClick","pathname","src","picture","large","alt","name","title","first","last","email","street","number","city","IconButton","Home","Content","Header","setUsers","setIsLoading","page","setPage","fetchUsers","a","axios","get","response","data","results","observer","useRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","usePeopleFetch","Favorites","Profile","Top","TopInfo","Title","h1","ProfileImage","ModalBox","Bottom","PropItem","Label","span","PropLabel","Toast","useLocation","open","setOpen","handleClose","subject","message","contact","setContact","contactError","setContactError","sent","setSent","handleChange","target","setTimeout","Collapse","in","Alert","action","aria-label","Close","Box","mt","Button","style","marginRight","FavoriteBorderOutlined","Modal","onClose","display","alignItems","justifyContent","marginBottom","TextField","error","fullWidth","multiline","rows","margin","dob","age","gender","phone","postcode","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","CssBaseline","NavBar","setValue","AppBar","position","top","Tabs","_e","newValue","indicatorColor","textColor","Tab","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8a211c51.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = () => {\r\n    onChange && onChange(value);\r\n  };\r\n\r\n  // console.log(`${label} : ${isChecked}`)\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\n\r\nexport const IconButton = styled.div`\r\n\r\n  opacity: ${({ isVisible2 }) => (isVisible2 ? 1 : 0)};\r\n \r\n`;\r\n\r\n\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { createContext, useState } from 'react'\n\n//create the favorites context with a null default value\nexport const FavoritesContext = createContext(null)\n\n\nexport default function FavoritesProvider({ children }) {\n\n    //set default favorites state to localStorage but if it's not exist set it to []\n    const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem('favorites')) || [])\n\n    const handleFavorite = (e, user) => {\n\n        //stopPropagation() to prevent open the profile page when u click on this button\n        e.stopPropagation()\n\n\n        let newFavs = []\n\n        //check if favorites includes our user\n        if (favorites.includes(user)) {\n            //includes ? filter favorites and remove the user\n            newFavs = favorites.filter(fav => fav !== user)\n        } else {\n            //not there ? push the user to the newFavs array\n            newFavs = [...favorites, user]\n        }\n\n        //set favorites to the new favorites\n        setFavorites(newFavs)\n\n        //set localStorage item to the new favorites\n        localStorage.setItem('favorites', JSON.stringify(newFavs))\n    }\n\n    return (\n        <FavoritesContext.Provider\n            //pass the favorites and handleFavorite so we can access them wherever in our app\n            value={{ favorites, handleFavorite }}\n        >\n            {/* render the children inside FavoritesProvider check AppRouter */}\n            {children}\n        </FavoritesContext.Provider>\n    )\n}\n\n\n","import { FavoritesContext } from '../context'\nimport { useContext } from 'react'\n\n\n//custom hook to easly access the FavoritesContext values\nexport const useFavorites = () => useContext(FavoritesContext)","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\nimport { useFavorites } from \"../../hooks\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst UserList = ({ users, isLoading, lastUserRef }) => {\r\n  console.log(users.length)\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n\r\n  const history = useHistory()\r\n\r\n  const [states, setStates] = useState({ \"BR\": false, \"AU\": false, \"CA\": false, \"DE\": false, \"France\": false });\r\n  const [checked, setChecked] = useState([])\r\n  const [filteredUsers, setFilteredUsers] = useState(users)\r\n  const countries = { \"BR\": \"Brazil\", \"AU\": \"Australia\", \"CA\": \"Canada\", \"DE\": \"Germany\", \"FR\": \"France\" }\r\n  \r\n  //instead of having a new state of favorites we will get it from the custom hook useFavorites we built\r\n  const { favorites, handleFavorite } = useFavorites()\r\n\r\n  //array of favorites // cookies \r\n  //update the cookeis // async storage \r\n  // use effect \r\n\r\n  const onChange = (state) => {\r\n\r\n    if (!states[state] && checked.indexOf(countries[state]) == -1) {\r\n      let newArr = [...checked]\r\n      newArr.push(countries[state])\r\n      setChecked(newArr)\r\n\r\n\r\n    } else {\r\n      let rem = checked.indexOf(state)\r\n      let newArr = [...checked]\r\n      newArr.splice(rem, 1)\r\n      setChecked(newArr)\r\n\r\n    }\r\n    setStates({ ...states, [state]: !states[state] })\r\n\r\n  }\r\n\r\n  var filter = []\r\n\r\n  useEffect(() => {\r\n\r\n    filter = users.filter(u => checked.includes(u.location.country))\r\n    setFilteredUsers(filter);\r\n  }, [checked])\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        <CheckBox onChange={onChange} isChecked={states[\"BR\"]} value=\"BR\" label=\"Brazil\" />\r\n        <CheckBox onChange={onChange} isChecked={states['AU']} value=\"AU\" label=\"Australia\" />\r\n        <CheckBox onChange={onChange} isChecked={states['CA']} value=\"CA\" label=\"Canada\" />\r\n        <CheckBox onChange={onChange} isChecked={states['DE']} value=\"DE\" label=\"Germany\" />\r\n        <CheckBox onChange={onChange} isChecked={states['NO']} value=\"FR\" label=\"France\" />\r\n      </S.Filters>\r\n      <S.List>\r\n        {/* {checked.length==0? users: filteredUsers} */}\r\n        {(checked.length == 0 ? users : filteredUsers).map((user, index) => {\r\n          console.log(favorites)\r\n          return (\r\n            <S.User\r\n              key={index}\r\n              onMouseEnter={() => handleMouseEnter(index)}\r\n              onMouseLeave={handleMouseLeave}\r\n\r\n              //check if the current index +1 equals users length (means the last user)\r\n              //then we give it the lastUserRef else we give it null\r\n              ref={users.length === index + 1 ? lastUserRef : null}\r\n\r\n              //when you click on user navigate to the profile page and pass the user as a state\r\n              onClick={() => history.push({ pathname: '/profile', state: user })}\r\n            >\r\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper isVisible={index === hoveredUserId || favorites.includes(user)}>\r\n                <IconButton onClick={(e) => handleFavorite(e, user)} >\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n\r\n          );\r\n        })}\r\n        {\r\n          isLoading && (\r\n            <S.SpinnerWrapper>\r\n              <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n            </S.SpinnerWrapper>\r\n          )\r\n        }\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const { users, isLoading, lastUserRef } = usePeopleFetch();\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList\r\n          users={users}\r\n          isLoading={isLoading}\r\n          lastUserRef={lastUserRef}\r\n        />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [page, setPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n\r\n    fetchUsers()\r\n\r\n  }, [page])\r\n\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=${page}`)\r\n    setIsLoading(false);\r\n\r\n    //we are not setting the users state to the new result but we keep the old results and ad new ones \r\n    setUsers([...users, ...response.data.results])\r\n  }\r\n\r\n  //observer to observe the last user item\r\n  const observer = useRef()\r\n\r\n\r\n  //we will assing lastUserRef everytime to the last node\r\n  const lastUserRef = useCallback(node => {\r\n\r\n    //if observer exists the stops watching\r\n    if (observer.current) observer.current.disconnect()\r\n\r\n    //if observer not exist then we create a new IntersectionObserver\r\n\r\n    //The Intersection Observer provides a way to asynchronously observe changes in the intersection of a target element\r\n    observer.current = new IntersectionObserver(entries => {\r\n      //entries means the items we are scrolling on\r\n\r\n      //if the item or entry is intersected (reached the bottom or last user)\r\n      if (entries[0].isIntersecting) {\r\n        //then we have to inscrease the page count +1\r\n        //so everythime we reach the bottom we increase and get page1,page2,page3...\r\n        setPage(prevPage => prevPage + 1)\r\n      }\r\n\r\n\r\n    })\r\n\r\n    //adds the node or element to the set of target elements being watched\r\n    if (node) observer.current.observe(node)\r\n\r\n  }, [])\r\n\r\n\r\n  //return an object\r\n  return { users, isLoading, fetchUsers, lastUserRef };\r\n};\r\n","import styled from \"styled-components\";\n\nexport const Favorites = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  max-width: 400px;\n  width: 100%;\n`;\n","import React, { useState } from \"react\";\nimport Text from \"components/Text\";\nimport UserList from \"components/UserList\";\nimport * as S from \"./style\";\nimport { useFavorites } from \"../../hooks\";\n\nconst Favorites = () => {\n  const { favorites } = useFavorites()\n\n  return (\n    <S.Favorites>\n      <S.Content>\n        <S.Header>\n          <Text size=\"64px\" bold>\n            Favorites\n          </Text>\n        </S.Header>\n\n        {\n          favorites.length\n            ? <UserList\n              users={favorites}\n              isLoading={false}\n              lastUserRef={null}\n            />\n            : <Text size=\"20px\">\n              You have no favorite people\n            </Text>\n        }\n\n      </S.Content>\n    </S.Favorites>\n  );\n};\n\nexport default Favorites;\n","import styled from \"styled-components\";\n\nexport const Profile = styled.div`\n  min-height: 100vh;\n  margin: auto;\n  box-sizing: border-box;\n  padding: 5rem 1rem;\n  @media (min-width: 980px) { \n    max-width: 70%;\n    padding: 5rem;\n   }\n`;\n\nexport const Top = styled.div`\n  display: flex;\n  align-items: center;\n  @media (max-width: 640px) { \n    justify-content: center;\n    flex-direction: column;\n  }\n`\n\nexport const TopInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding-left: 2rem;\n  @media (max-width: 640px) { \n    align-items: center;\n  }\n`\n\nexport const Title = styled.h1`\n  \n`\n\nexport const ProfileImage = styled.img`\n  width: 100%;\n  max-width: 12rem;\n  border-radius: 50rem;\n`\n\nexport const ModalBox = styled.div`\n  width: 30rem;\n  background-color: #303030;\n  padding: 1rem;\n  border-radius: 0.5rem;\n`\n\nexport const Bottom = styled.div`\n  margin-top: 2rem;\n`\n\nexport const PropItem = styled.div`\n  margin-bottom: .5rem;\n  display:flex;\n  align-items: center;\n  font-size: 1.15rem;\n\n`\n\nexport const Label = styled.span`\n  font-weight: 600;\n  margin-right: .5rem;\n`\n\nexport const PropLabel = styled.span`\n\n`\n\nexport const Toast = styled.div`\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n`","import React, { useEffect, useState } from 'react'\nimport { IconButton, Box, Button, Modal, Typography, TextField, Collapse } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert'\nimport { FavoriteBorderOutlined, Favorite, Close } from \"@material-ui/icons\";\nimport { useHistory, useLocation } from 'react-router';\nimport * as S from \"./style\";\nimport { useFavorites } from '../../hooks';\n\nexport default function Profile() {\n    const history = useHistory()\n\n    const { state } = useLocation()\n\n    const { favorites, handleFavorite } = useFavorites()\n\n\n    //used for the modal hide and show\n    const [open, setOpen] = useState(false)\n    const handleOpen = () => setOpen(true)\n    const handleClose = () => setOpen(false)\n\n\n    //used for the contact form in the modal\n    const [contact, setContact] = useState({ subject: '', message: '' })\n    const [contactError, setContactError] = useState(null)\n    const [sent, setSent] = useState(false)\n\n    const handleChange = ({ target: { name, value } }) => {\n        //whenever the input changes set the contact state key [name] to the value\n        //ex name = subject , value = 123\n        // setContact({ ...contact, subject: 123 })\n        setContact({ ...contact, [name]: value })\n    }\n\n    const handleSend = () => {\n\n        //destrucnt subject and message from contact\n        //instead of writing contact.subject and contact.message each time\n        const { subject, message } = contact\n\n        //if one of them is emty return setContactError\n        if (!subject) return setContactError('subject')\n        if (!message) return setContactError('message')\n\n\n        //if all fields is good\n        setContactError(null)\n\n        //DP SOME BACKEND API CALL...\n\n        setContact({ subject: '', message: '' })\n        setSent(true)\n        handleClose()\n    }\n\n    useEffect(() => {\n        //watch the sent Alert\n        if (!sent) return\n\n        //hide the alert in 5s\n        setTimeout(() => {\n            setSent(false)\n        }, 5000)\n\n    }, [sent])\n\n\n\n    if (!state) {\n        //if there is no state just return to the home page\n        history.push('/')\n        return <></>\n    }\n    \n\n    return (\n        <S.Profile>\n            <Collapse in={sent}>\n                <S.Toast>\n                    <Alert\n                        variant='filled'\n                        action={\n                            <IconButton\n                                aria-label=\"close\"\n                                color=\"inherit\"\n                                size=\"small\"\n                                onClick={() => setSent(false)}\n                            >\n                                <Close />\n                            </IconButton>\n                        }\n                    >\n                        Your message has been Sent !\n                    </Alert>\n                </S.Toast>\n            </Collapse>\n\n            <S.Top>\n                <S.ProfileImage src={state.picture.large} />\n                <S.TopInfo>\n                    <S.Title> {state.name.first} {state.name.last}</S.Title>\n                    <Typography>{state.location.city}</Typography>\n                    <Box mt={2}>\n                        <Button\n                            color='primary'\n                            variant=\"contained\"\n                            onClick={handleOpen}\n                            style={{ marginRight: '1rem' }}\n                        >\n                            Contact {state.name.first}\n                        </Button>\n\n                        <IconButton onClick={(e) => handleFavorite(e, state)}>\n                            {\n                                favorites.includes(state)\n                                    ? <Favorite color='error' />\n                                    : <FavoriteBorderOutlined />\n                            }\n                        </IconButton>\n                        <Modal\n                            open={open}\n                            onClose={handleClose}\n                            style={{\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center'\n                            }}\n                        >\n                            <S.ModalBox>\n                                <Typography\n                                    style={{ marginBottom: '1rem' }}\n                                    variant='h6'\n                                >\n                                    Send message to {state.name.first}\n                                </Typography>\n                                <TextField\n                                    variant=\"outlined\"\n                                    error={contactError === 'subject'}\n                                    label=\"Subject\"\n                                    fullWidth\n                                    style={{ marginBottom: '1rem' }}\n                                    name='subject'\n                                    onChange={handleChange}\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    error={contactError === 'message'}\n                                    label=\"Message\"\n                                    fullWidth\n                                    multiline\n                                    rows={5}\n                                    style={{ marginBottom: '1rem' }}\n                                    name='message'\n                                    onChange={handleChange}\n                                />\n                                <Button\n                                    color='primary'\n                                    variant=\"contained\"\n                                    onClick={handleSend}\n                                    fullWidth\n                                >\n                                    Send\n                                </Button>\n                            </S.ModalBox>\n                        </Modal>\n\n                    </Box>\n                </S.TopInfo>\n            </S.Top>\n            <S.Bottom>\n                <S.Title style={{ margin: '1.5rem 0' }} >\n                    About {state.name.first}\n                </S.Title>\n                <S.PropItem>\n                    <S.Label>Age :</S.Label>\n                    <S.PropLabel>{state.dob.age}</S.PropLabel>\n                </S.PropItem>\n                <S.PropItem>\n                    <S.Label>Gender :</S.Label>\n                    <S.PropLabel>{state.gender}</S.PropLabel>\n                </S.PropItem>\n                <S.PropItem>\n                    <S.Label>Email :</S.Label>\n                    <S.PropLabel>{state.email}</S.PropLabel>\n                </S.PropItem>\n                <S.PropItem>\n                    <S.Label>Phone :</S.Label>\n                    <S.PropLabel>{state.phone}</S.PropLabel>\n                </S.PropItem>\n                <S.PropItem>\n                    <S.Label>Address :</S.Label>\n                    <S.PropLabel>\n                        {state.location.country}\n                        {' '}\n                        {state.location.city}\n                        {' '}\n                        {state.location.street.name}\n                        {' '}\n                        {state.location.postcode}\n                    </S.PropLabel>\n                </S.PropItem>\n            </S.Bottom>\n        </S.Profile >\n    )\n}\n\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\n\r\nconst NavBar = () => {\r\n  //pathname is the page path\r\n  const { pathname } = useLocation()\r\n\r\n  const [value, setValue] = useState(pathname)\r\n\r\n  const history = useHistory()\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    //when we click on tab navigate to the newValue tab\r\n    history.push(newValue)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    //listen for the pathname change and set the tab value\r\n    setValue(pathname)\r\n\r\n  },[pathname])\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" value='/' />\r\n        <Tab label=\"Favorites\" value='/favorites' />\r\n        {\r\n          //Show profile tab only if we are at profile page\r\n          pathname === '/profile' &&  <Tab label=\"Profile\" value='/profile' />\r\n        }\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home, Favorites, Profile } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\nimport { FavoritesProvider } from './context'\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <FavoritesProvider>\r\n        <Router>\r\n          <NavBar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/favorites\" component={Favorites} />\r\n            <Route exact path=\"/profile\" component={Profile} />\r\n          </Switch>\r\n        </Router>\r\n      </FavoritesProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}